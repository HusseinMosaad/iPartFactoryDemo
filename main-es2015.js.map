{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/content-keys.service.ts","./src/app/ipart-settings.service.ts","./src/app/models/content-item-data.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { IpartSettingsService } from './ipart-settings.service';\r\nimport { ContentItemData } from './models/content-item-data';\r\nimport { HttpClient, HttpParams, HttpBackend } from '@angular/common/http';\r\nimport { AppConstantService } from '@advsol/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = ' Hussein Calling Current User!';\r\n  data: MySettings;\r\n  currentUser: CurrentUser;\r\n  loggedInUserDataServer: CurrentUser;\r\n  loggedInPartyId = \"\";\r\n  query: string;\r\n\r\n\r\n  private httpClient: HttpClient;\r\n  constructor(private settings: IpartSettingsService, private http: HttpClient, httpClient: HttpBackend, private context: AppConstantService) {\r\n    this.loggedInPartyId = context.loggedInPartyId;\r\n    this.httpClient = new HttpClient(httpClient);\r\n  }\r\n  // Using commonService\r\n  ngOnInit(): void {\r\n    // this.settings.GetSettings().subscribe((data: ContentItemData) => {\r\n    //   this.data = data.Data as MySettings;\r\n    // });\r\n    this.getLoggedInUserInfo();\r\n    this.getUserDataServer();\r\n  }\r\n\r\n  getIqaData(): void {\r\n    if (!this.query) {\r\n      alert(\"Please enter Query first\");\r\n      return;\r\n    }\r\n    const baseUrl = this.context.baseUrl;\r\n    const domain = window.location.href;\r\n    const url = \"https://openwater-os.secure-platform.com/ipartfactory/iqa\";\r\n    const params = new HttpParams()\r\n      .set('instanceUrl', domain)\r\n      .set('loggedInUserId', this.loggedInPartyId)\r\n      .set('query', this.query);\r\n\r\n    this.httpClient.get(url, { params: params }).subscribe((data) => {\r\n      this.data = data;\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  getLoggedInUserInfo(): void {\r\n    const url = `api/party/${this.loggedInPartyId}`;\r\n    console.log(url);\r\n    this.http.get(url, { params: {} }).subscribe((data) => {\r\n      this.currentUser = data as CurrentUser;\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  getUserDataServer(): void {\r\n    const sessionIdCookie = this.getCookie('ASP.NET_SessionId');\r\n    const loginCookieValue = this.getCookie('login');\r\n    const domain = window.location.href;\r\n    const url = \"https://openwater-os.secure-platform.com/ipartfactory/userdata\";\r\n    const params = new HttpParams()\r\n      .set('instanceUrl', domain)\r\n      .set('loggedInUserId', this.loggedInPartyId)\r\n      .set('token', this.context.authToken)\r\n      .set('sessionIdCookie', sessionIdCookie)\r\n      .set('loginCookieValue', loginCookieValue);\r\n\r\n    console.log('Session Cookie='+ sessionIdCookie);\r\n    console.log('Login Cookie='+ loginCookieValue);\r\n    this.httpClient.get(url, { params: params }).subscribe((data) => {\r\n      this.loggedInUserDataServer = data as CurrentUser;\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  getCookie(cname): string {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for(let i = 0; i <ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\ninterface MySettings {\r\n  myStringSetting?: string;\r\n  myBoolSetting?: string;\r\n  mySelectSetting?: string;\r\n}\r\n\r\ninterface CurrentUser {\r\n  id: string,\r\n  name: string,\r\n  partyId: string\r\n}\r\n\r\n\r\n\r\n","<div style=\"text-align:center\">\r\n  <h1>\r\n    Hello {{ title }}!\r\n  </h1>\r\n</div>\r\n<!-- <input type=\"button\" (click)=\"example()\" value=\"Simple example\" /> -->\r\n<!-- <pre>{{data | json}}</pre> -->\r\n\r\n<Strong>Current User Client</Strong>\r\n<pre>{{currentUser | json}}</pre>\r\n\r\n<Strong>Current User Server</Strong>\r\n<pre>{{loggedInUserDataServer | json}}</pre>\r\n\r\n<strong>Search Users</strong>\r\n<input [(ngModel)]=\"query\">\r\n<input type=\"button\" (click)=\"getIqaData()\" value=\"Get IQA Result\" />\r\n<pre>{{data | json}}</pre>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AsiCoreModule } from '@advsol/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AsiCoreModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContentKeysService {\r\n\r\n  public contentKey: string;\r\n  public contentItemKey: string;\r\n\r\n  // Grab our setting keys for this iPart from the DOM\r\n  constructor() { \r\n    const ck = (document.querySelector(\"#x-contentKey\") as HTMLInputElement).value;\r\n    const cik = (document.querySelector(\"#x-contentItemKey\") as HTMLInputElement).value;\r\n\r\n    this.contentKey = ck;\r\n    this.contentItemKey =cik; \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { CommonService } from  '@advsol/core';\r\nimport { ContentItemData } from './models/content-item-data';\r\nimport { ContentKeysService } from './content-keys.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IpartSettingsService extends CommonService {\r\n\r\n  constructor(private http: HttpClient, private contentKeys: ContentKeysService) {\r\n    super(http);\r\n    \r\n  }\r\n\r\n  public GetSettings (): Observable<ContentItemData>\r\n  {\r\n    const params = new HttpParams()\r\n    .set('contentKey', this.contentKeys.contentKey)\r\n    .set('contentItemKey',this.contentKeys.contentItemKey);\r\n    return this.single(ContentItemData,params);\r\n  }\r\n\r\n}\r\n","import {DataContract} from  '@advsol/core';\r\n\r\nexport class ContentItemData extends DataContract {\r\n    $type = 'Asi.Soa.Core.DataContracts.ContentItemData, Asi.Contracts';\r\n    Data: Data;\r\n}\r\n\r\ninterface Data {\r\n    ContentKey: string;\r\n    ContentTypeKey: string;\r\n    ContentItemKey: string;\r\n    ShowTitleFlag: boolean;\r\n    SortOrder: number;\r\n    LayoutZone: number;\r\n    ContentItemName: string;\r\n    IconUrl?: any;\r\n    Settings: any;\r\n    PartTitle?: any;\r\n    PartTitleHeadingLevel: number;\r\n    DoNotRenderInDesignMode: boolean;\r\n    CssClass?: any;\r\n    ShowBorder: boolean;\r\n    Collapsible: boolean;\r\n    Collapsed: boolean;\r\n    DisplayOnExtraSmallScreens: boolean;\r\n    DisplayOnSmallScreens: boolean;\r\n    DisplayOnMediumScreens: boolean;\r\n    DisplayOnLargeScreens: boolean;\r\n    ModuleSpecificSetting?: any;\r\n    LicenseKeyRestriction?: any;    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}