{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/content-keys.service.ts","webpack:///src/app/ipart-settings.service.ts","webpack:///src/app/models/content-item-data.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","settings","http","context","title","loggedInPartyId","httpClient","console","log","GetSettings","subscribe","data","Data","example","limit","domain","window","location","href","token","authToken","url","params","set","get","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ContentKeysService","ck","document","querySelector","value","cik","contentKey","contentItemKey","providedIn","IpartSettingsService","contentKeys","single","ContentItemData","$type","environment","production","bootstrapModule","catch","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,Y;;;AAMX,4BAAoBC,QAApB,EAA4DC,IAA5D,EAAuFC,OAAvF,EAAoH;AAAA;;AAAhG,aAAAF,QAAA,GAAAA,QAAA;AAAwC,aAAAC,IAAA,GAAAA,IAAA;AAA2B,aAAAC,OAAA,GAAAA,OAAA;AALvF,aAAAC,KAAA,GAAQ,0BAAR;AAEA,aAAAC,eAAA,GAAkB,EAAlB;AAIE,aAAKA,eAAL,GAAuBF,OAAO,CAACE,eAA/B;AACA,aAAKC,UAAL,GAAkB,IAAI,+DAAJ,CAAeJ,IAAf,CAAlB;AAEAK,eAAO,CAACC,GAAR,CAAYL,OAAO,CAACE,eAApB;AACD,O,CACD;;;;;mCACQ;AAAA;;AACN,eAAKJ,QAAL,CAAcQ,WAAd,GAA4BC,SAA5B,CAAsC,UAACC,IAAD,EAA2B;AAC/D,iBAAI,CAACA,IAAL,GAAYA,IAAI,CAACC,IAAjB;AACD,WAFD;AAGA,eAAKC,OAAL;AACD,S,CAED;;;;kCACO;AACL;AACA;AACA;AACA;AACA;AAGA,cAAMC,KAAK,GAAG,GAAd;AACA,cAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA/B;AACA,cAAMC,KAAK,GAAG,KAAKhB,OAAL,CAAaiB,SAA3B;AACA,cAAMC,GAAG,GAAG,4DAAZ,CAXK,CAYL;;AACA,cAAMC,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,QADQ,EACER,MADF,EAEZQ,GAFY,CAER,OAFQ,EAECJ,KAFD,EAGZI,GAHY,CAGR,SAHQ,EAGG,KAAKlB,eAHR,CAAf;AAMA,eAAKC,UAAL,CAAgBkB,GAAhB,CAAoBH,GAApB,EAAyB;AAAEC,kBAAM,EAAEA;AAAV,WAAzB,EAA6CZ,SAA7C,CAAuD,UAACC,IAAD,EAAU;AAE/DJ,mBAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,WAHD;AAID;;;;;;;uBA5CUX,Y,EAAY,6I,EAAA,iI,EAAA,gI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,sG;AAAA;AAAA;ACXzB;;AACE;;AACE;;AACF;;AACF;;AACA;;AAAqB;AAAA,mBAAS,IAAAa,OAAA,EAAT;AAAkB,WAAlB;;AAArB;;AACA;;AAAK;;;;AAAe;;;;AAJhB;;AAAA;;AAIC;;AAAA;;;;;;;;;sEDKQb,Y,EAAY;cALxB,uDAKwB;eALd;AACTyB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAJJ,CACP,uEADO,EAEP,0DAFO,CAII;;;;0HAGFA,S,EAAS;AAAA,uBATlB,2DASkB;AATN,kBAGZ,uEAHY,EAIZ,0DAJY;AASM,O;AALL,K;;;;;sEAKJA,S,EAAS;cAXrB,sDAWqB;eAXZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,CAJD;AAQRC,mBAAS,EAAE,EARH;AASRC,mBAAS,EAAE,CAAC,2DAAD;AATH,S;AAWY,Q;;;;;;;;;;;;;;;;;;ACjBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,kB,GAKX;AACA,kCAAc;AAAA;;AACZ,UAAMC,EAAE,GAAIC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,EAA6DC,KAAzE;AACA,UAAMC,GAAG,GAAIH,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAAiEC,KAA9E;AAEA,WAAKE,UAAL,GAAkBL,EAAlB;AACA,WAAKM,cAAL,GAAqBF,GAArB;AACD,K;;;uBAZUL,kB;AAAkB,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVQ,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;ACL/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,oB;;;;;AAEX,oCAAoBxC,IAApB,EAA8CyC,WAA9C,EAA+E;AAAA;;AAAA;;AAC7E,mGAAMzC,IAAN;AADkB,eAAAA,IAAA,GAAAA,IAAA;AAA0B,eAAAyC,WAAA,GAAAA,WAAA;AAAiC;AAG9E;;;;sCAEiB;AAEhB,cAAMrB,MAAM,GAAG,IAAI,+DAAJ,GACdC,GADc,CACV,YADU,EACI,KAAKoB,WAAL,CAAiBJ,UADrB,EAEdhB,GAFc,CAEV,gBAFU,EAEO,KAAKoB,WAAL,CAAiBH,cAFxB,CAAf;AAGA,iBAAO,KAAKI,MAAL,CAAY,yEAAZ,EAA4BtB,MAA5B,CAAP;AACD;;;;MAbuC,0D;;;uBAA7BoB,oB,EAAoB,uH,EAAA,gI;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVD,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaI,e;;;;;AAAb;AAAA;;AAAA;;;AACI,eAAAC,KAAA,GAAQ,2DAAR;AADJ;AAGC;;;MAHoC,yD;;;;;;;;;;;;;;;;;ACFrC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAI5C,OAAO,CAAC6C,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { IpartSettingsService } from './ipart-settings.service';\r\nimport { ContentItemData } from './models/content-item-data';\r\nimport { HttpClient, HttpParams, HttpBackend } from '@angular/common/http';\r\nimport { AppConstantService } from '@advsol/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = ' Hussein Calling Server!';\r\n  data: MySettings; // this is JSON data\r\n  loggedInPartyId = \"\";\r\n  private httpClient: HttpClient;\r\n\r\n  constructor(private settings: IpartSettingsService, private http: HttpBackend, private context: AppConstantService) {\r\n    this.loggedInPartyId = context.loggedInPartyId;\r\n    this.httpClient = new HttpClient(http);\r\n\r\n    console.log(context.loggedInPartyId);\r\n  }\r\n  // Using commonService\r\n  ngOnInit(): void {\r\n    this.settings.GetSettings().subscribe((data: ContentItemData) => {\r\n      this.data = data.Data as MySettings;\r\n    });\r\n    this.example();\r\n  }\r\n\r\n  // Without CommonService\r\n  example(): void {\r\n    // const ck = (document.querySelector(\"#x-contentKey\") as HTMLInputElement).value;\r\n    // const cik = (document.querySelector(\"#x-contentItemKey\") as HTMLInputElement).value;    \r\n    // const params = new HttpParams()\r\n    // .set('contentKey', ck)\r\n    // .set('contentItemKey',cik);\r\n\r\n\r\n    const limit = \"1\";\r\n    const domain = window.location.href;\r\n    const token = this.context.authToken;\r\n    const url = \"https://openwater-os.secure-platform.com/ipartfactory/test\";\r\n    // const url = \"api/party\";\r\n    const params = new HttpParams()\r\n      .set('domain', domain)\r\n      .set('token', token)\r\n      .set('partyId', this.loggedInPartyId);\r\n    \r\n    \r\n    this.httpClient.get(url, { params: params }).subscribe((data) => {\r\n\r\n      console.log(data);\r\n    });\r\n  }\r\n}\r\n\r\n\r\ninterface MySettings {\r\n  myStringSetting?: string;\r\n  myBoolSetting?: string;\r\n  mySelectSetting?: string;\r\n}\r\n","<div style=\"text-align:center\">\r\n  <h1>\r\n    Hello {{ title }}!\r\n  </h1>\r\n</div>\r\n<input type=\"button\" (click)=\"example()\" value=\"Simple example\" />\r\n<pre>{{data | json}}</pre>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AsiCoreModule } from '@advsol/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AsiCoreModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContentKeysService {\r\n\r\n  public contentKey: string;\r\n  public contentItemKey: string;\r\n\r\n  // Grab our setting keys for this iPart from the DOM\r\n  constructor() { \r\n    const ck = (document.querySelector(\"#x-contentKey\") as HTMLInputElement).value;\r\n    const cik = (document.querySelector(\"#x-contentItemKey\") as HTMLInputElement).value;\r\n\r\n    this.contentKey = ck;\r\n    this.contentItemKey =cik; \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { CommonService } from  '@advsol/core';\r\nimport { ContentItemData } from './models/content-item-data';\r\nimport { ContentKeysService } from './content-keys.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IpartSettingsService extends CommonService {\r\n\r\n  constructor(private http: HttpClient, private contentKeys: ContentKeysService) {\r\n    super(http);\r\n    \r\n  }\r\n\r\n  public GetSettings (): Observable<ContentItemData>\r\n  {\r\n    const params = new HttpParams()\r\n    .set('contentKey', this.contentKeys.contentKey)\r\n    .set('contentItemKey',this.contentKeys.contentItemKey);\r\n    return this.single(ContentItemData,params);\r\n  }\r\n\r\n}\r\n","import {DataContract} from  '@advsol/core';\r\n\r\nexport class ContentItemData extends DataContract {\r\n    $type = 'Asi.Soa.Core.DataContracts.ContentItemData, Asi.Contracts';\r\n    Data: Data;\r\n}\r\n\r\ninterface Data {\r\n    ContentKey: string;\r\n    ContentTypeKey: string;\r\n    ContentItemKey: string;\r\n    ShowTitleFlag: boolean;\r\n    SortOrder: number;\r\n    LayoutZone: number;\r\n    ContentItemName: string;\r\n    IconUrl?: any;\r\n    Settings: any;\r\n    PartTitle?: any;\r\n    PartTitleHeadingLevel: number;\r\n    DoNotRenderInDesignMode: boolean;\r\n    CssClass?: any;\r\n    ShowBorder: boolean;\r\n    Collapsible: boolean;\r\n    Collapsed: boolean;\r\n    DisplayOnExtraSmallScreens: boolean;\r\n    DisplayOnSmallScreens: boolean;\r\n    DisplayOnMediumScreens: boolean;\r\n    DisplayOnLargeScreens: boolean;\r\n    ModuleSpecificSetting?: any;\r\n    LicenseKeyRestriction?: any;    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}